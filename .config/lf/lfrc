### Vars
set shell zsh
set shellopts "-eu"
set ifs '\n'
set scrolloff 10
set period 1


### Cmds/functions
cmd open ${{
  case $(file --mime-type $f -b) in
    image/vnd.djvu|application/pdf|application/octet-stream) setsid -f zathura $fx >/dev/null 2>&1 ;;
    text/*) $EDITOR $fx;;
    image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
    image/svg+xml) display -- $f ;;
    image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" | sxiv -aio 2>/dev/null | lf-select ;;
    audio/*) mpv --audio-display=no $f ;;
    video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
    application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
    application/pgp-encrypted) $EDITOR $fx ;;
    *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
  esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
  clear; tput cup $(($(tput lines)/3)); tput bold
  set -f
  printf "%s\n\t" "$fx"
  printf "extract?[y/N]"
  read ans
  [ $ans = "y" ] && ext $fx
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

cmd moveto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Move to where?"
	dest="$(awk '{ gsub(/#.*/, ""); } !/^$/ { print $2 }' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf)" &&
	for x in $fx; do
		eval mv -iv \"$x\" \"$dest\"
	done &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Copy to where?"
	dest="$(awk '{ gsub(/#.*/, ""); } !/^$/ { print $2 }' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf)" &&
	for x in $fx; do
		eval cp -ivr \"$x\" \"$dest\"
	done &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd setbg "$1"


### Bindings
# Navigation
map gh
map g top

# File actions
map D delete
map <c-e> extract
map Y copyto # Y for yank
map M moveto
map <c-n> push :mkdir<space>

# Renaming
map A rename                  # At the end
map c push A<c-u>             # Change name
map I push A<c-a>             # At the beginning
map i push A<a-b><a-b><a-f>   # Before extension
map a push A<a-b>             # After extension

# Executing
map <enter> shell
map x $$f
map X !$f
map o &mimeopen Â¤f
map O $mimeopen --ask $f

# Miscellaneous
map <c-r> reload
map <c-s> set hidden!         # <c-h> does not work
map b $setbg $f
map V push :!nvim<space>


### Source bookmarks (env vars do not work)
source "~/.config/lf/shortcutrc"
# 'C' and 'E' is reserved for bookmarks
